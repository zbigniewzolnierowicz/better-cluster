{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":automergeDigest",
    ":automergeBranch",
    "helpers:pinGitHubActionDigests"
  ],
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["on saturday"],
  "hostRules": [
    {
      "hostType": "github",
      "matchHost": "https://github.com/zbigniewzolnierowicz",
      "encrypted": {
        "token": "wcFMA/xDdHCJBTolAQ\/\/cHh+DPZIZpzgtp6ThVpjfCjyqyFmOLY3lgc+Zf2hxuao02tgzqw2+ykuZjp5CX/0yW5EGyGwRdly9Piizej8HWAXFtrXNbznqWIWZlxBQRdotyTQhyNogGG+hv+SNoSbUHENs/Rl+GtJzvBRyzPCIdhkS5xbxQ7LauIWtRenJApO4+YeevsMKf2Zwm43Jq1A9kotg36fniPvYAFkCtr2dMZDHUf6OGvbIcAGg/P0HPQP5ltyvGJlAIA/3sA1oYGJUfJORzUlZvO5F9WGHMBXDAxDLjjre23u6d+fTQCtjoPJCjIkjQF/HCl9ue74WKMgXhUCjNcyDpFRZMoWwj82OQiTz5h06ejoss4iraZ7+ZibEiYtG6fgb0Lnti9AA/6rMXYKS0uWTCm7CsnRyTLVXZXuaLXQnWzwnL2EoMawSZ4zzYPHekCrM20Q7GCIERxEoLUc6wTcDyZm+4m0OuGIYZ3RJjCPGu+nN0xe1YzPcl/5SO36g58nZ4MIXzP0umjI+YGSyTjkGm25YmLq75S8BxDGRoMQJSfnc0r76gVBO9lwbQeWPbtT75phFFaOS6YrMAuyJ1nikULwc8XYz2Q6/QizH6VfUpSD6a0NdIxWTRg7hS624cs3G6LPlAeq5DWx+coldTWyQrCgbOFDdIaMCLjL0T4tKaAXTUFRywLPtdzSgwGP/j3Ara5MIB88eoO/T0IZQX5XW9zAGSYhX1t1dqsDucCmTsAQBWTSmnU/SKwEtOKEo7zOkoSUco/gMi9TfQ003h7uMatCKnmD5Y9zDP/oByNmeFWPKbWj2odzKV5xNdgnt2iFueVMpyLOlAjt1dWA25vDIBJ0EMNB6Kp8E6XfQQT9"
        }
    },
    {
      "hostType": "docker",
      "matchHost": "ghcr.io",
      "username": "zbigniewzolnierowicz",
      "encrypted": {
        "password": "wcFMA/xDdHCJBTolAQ\/\/cHh+DPZIZpzgtp6ThVpjfCjyqyFmOLY3lgc+Zf2hxuao02tgzqw2+ykuZjp5CX/0yW5EGyGwRdly9Piizej8HWAXFtrXNbznqWIWZlxBQRdotyTQhyNogGG+hv+SNoSbUHENs/Rl+GtJzvBRyzPCIdhkS5xbxQ7LauIWtRenJApO4+YeevsMKf2Zwm43Jq1A9kotg36fniPvYAFkCtr2dMZDHUf6OGvbIcAGg/P0HPQP5ltyvGJlAIA/3sA1oYGJUfJORzUlZvO5F9WGHMBXDAxDLjjre23u6d+fTQCtjoPJCjIkjQF/HCl9ue74WKMgXhUCjNcyDpFRZMoWwj82OQiTz5h06ejoss4iraZ7+ZibEiYtG6fgb0Lnti9AA/6rMXYKS0uWTCm7CsnRyTLVXZXuaLXQnWzwnL2EoMawSZ4zzYPHekCrM20Q7GCIERxEoLUc6wTcDyZm+4m0OuGIYZ3RJjCPGu+nN0xe1YzPcl/5SO36g58nZ4MIXzP0umjI+YGSyTjkGm25YmLq75S8BxDGRoMQJSfnc0r76gVBO9lwbQeWPbtT75phFFaOS6YrMAuyJ1nikULwc8XYz2Q6/QizH6VfUpSD6a0NdIxWTRg7hS624cs3G6LPlAeq5DWx+coldTWyQrCgbOFDdIaMCLjL0T4tKaAXTUFRywLPtdzSgwGP/j3Ara5MIB88eoO/T0IZQX5XW9zAGSYhX1t1dqsDucCmTsAQBWTSmnU/SKwEtOKEo7zOkoSUco/gMi9TfQ003h7uMatCKnmD5Y9zDP/oByNmeFWPKbWj2odzKV5xNdgnt2iFueVMpyLOlAjt1dWA25vDIBJ0EMNB6Kp8E6XfQQT9"
        }
    }
  ],
  "flux": {
    "fileMatch": [
      "(^|/)addons/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?(\\.j2)?$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "(^|/)addons/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?(\\.j2)?$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "(^|/)addons/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)ansible/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
      "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?(\\.j2)?$"
    ]
  },
  "kustomize": {
    "fileMatch": [
      "(^|/)kustomization\\.ya?ml(\\.j2)?$"
    ]
  },
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  "packageRules": [
    {
      "description": "Auto merge Github Actions",
      "matchManagers": ["github-actions"],
      "automerge": true,
      "automergeType": "branch",
      "ignoreTests": true,
      "matchUpdateTypes": ["minor", "patch", "digest"]
    },
    {
      "description": "Flux Group",
      "groupName": "Flux",
      "matchPackagePatterns": ["flux"],
      "matchDatasources": ["docker", "github-tags"],
      "versioning": "semver",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      },
      "separateMinorPatch": true
    },
    {
      "description": "Use custom versioning for k3s",
      "matchDatasources": ["github-releases"],
      "versioning": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(?<compatibility>\\+k3s)(?<build>\\d+)$",
      "matchPackagePatterns": ["k3s"]
    },
    {
      "matchDatasources": ["helm"],
      "commitMessageTopic": "chart {{depName}}"
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageTopic": "image {{depName}}"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(container)!: "
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["digest"],
      "semanticCommitType": "chore",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(helm)!: "
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["galaxy", "galaxy-collection"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(ansible)!: "
    },
    {
      "matchDatasources": ["galaxy", "galaxy-collection"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "ansible"
    },
    {
      "matchDatasources": ["galaxy", "galaxy-collection"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "ansible"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-release)!: "
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-release"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-release"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-action)!: "
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-action"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-action"
    },
    {
      "matchUpdateTypes": ["major"],
      "labels": ["type/major"]
    },
    {
      "matchUpdateTypes": ["minor"],
      "labels": ["type/minor"]
    },
    {
      "matchUpdateTypes": ["patch"],
      "labels": ["type/patch"]
    },
    {
      "matchDatasources": ["docker"],
      "addLabels": ["renovate/container"]
    },
    {
      "matchDatasources": ["helm"],
      "addLabels": ["renovate/helm"]
    },
    {
      "matchDatasources": ["galaxy", "galaxy-collection"],
      "addLabels": ["renovate/ansible"]
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "addLabels": ["renovate/github-release"]
    },
    {
      "matchManagers": ["github-actions"],
      "addLabels": ["renovate/github-action"]
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Process various other dependencies",
      "fileMatch": [
        "(^|/)addons/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
        "(^|/)ansible/.+\\.ya?ml(\\.j2)?(\\.j2)?$",
        "(^|/)kubernetes/.+\\.ya?ml(\\.j2)?(\\.j2)?$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n",
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n",
        "datasource=(?<datasource>\\S+)\n.*?repo: (?<registryUrl>\\S+)\n.*?chart: (?<depName>\\S+)\n.*?version: (?<currentValue>\\S+)\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ]
}
