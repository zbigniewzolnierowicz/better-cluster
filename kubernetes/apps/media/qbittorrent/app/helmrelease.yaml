---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: openebs
      namespace: kube-system
  values:
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.5@sha256:16ddd3697593e8f0e82de2b2eae4edbe1b67eb04936cdb2dccae79fda3338850
    env:
      TZ: Europe/Warsaw
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &bittorrentPort 50413
      QBT_Preferences__WebUI__AlternativeUIEnabled: false
      QBT_Preferences__WebUI__LocalHostAuth: false
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${QBIT_ADDRESS}
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
            targetPort: *bittorrentPort
        externalTrafficPolicy: Cluster
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: &host "torrent.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config
      media:
        enabled: true
        type: nfs
        mountPath: /media
        server: "${NAS_ADDRESS}"
        path: "${NAS_BASE_URL}/media"
      downloads:
        enabled: true
        type: nfs
        mountPath: /downloads
        server: "${NAS_ADDRESS}"
        path: "${NAS_BASE_URL}/media/downloads"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 6Gi
